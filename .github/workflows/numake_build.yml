# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build using numake

on:
  push:
    branches:
      - "main"

  workflow_dispatch:

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: plugin.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: read

jobs:
  generate-release-name:
    runs-on: self-hosted
    outputs:
      name: ${{steps.generate.outputs.name}}

    steps:
      - uses: actions/checkout@v4

      - id: generate
        run: echo "name=$(git rev-parse --short HEAD)_$(date +%H-%M)" >> "$GITHUB_OUTPUT"

  build-msvc:
    runs-on: windows-latest
    needs: generate-release-name

    steps:
      - uses: actions/checkout@v4

      - name: Download numake
        run: gh release download indev -R juicermv/numake --dir "${{runner.temp}}"

      - name: Build using numake
        run: ${{runner.temp}}/numake.exe build all -w ${{github.workspace}}

      - run: mv .numake/out lib
        shell: powershell

      - run: rm -R -Force .numake
        shell: powershell

      - name: Move source code to src
        shell: powershell
        run: |
          mkdir src
          mv hooking src/hooking
          mv injector src/injector
          mv modutils src/modutils
          mv plugin_II src/plugin_II
          mv plugin_III src/plugin_III
          mv plugin_IV src/plugin_IV
          mv plugin_iii_unreal src/plugin_iii_unreal
          mv plugin_sa src/plugin_sa
          mv plugin_sa_unreal src/plugin_sa_unreal
          mv plugin_vc src/plugin_vc
          mv plugin_vc_unreal src/plugin_vc_unreal
          mv safetyhook src/safetyhook
          mv shared src/shared
          mv stb src/stb

      - name: Cleanup
        shell: powershell
        run: |
          rm -R -Force .git*
          rm -R -Force project.lua

      - uses: actions/upload-artifact@v4
        with:
          path: .
          name: msvc
          compression-level: 9

  build-mingw:
    runs-on: ubuntu-24.04
    needs: generate-release-name

    steps:
      - uses: actions/checkout@v4

      - run: "sudo apt-get install g++-mingw-w64-i686 binutils-mingw-w64-i686"

      - name: Download numake
        run: |
          gh release download indev -R juicermv/numake --dir "${{runner.temp}}"
          chmod a+x ${{runner.temp}}/numake

      - name: Build using numake
        run: ${{runner.temp}}/numake build all -w ${{github.workspace}}

      - run: mv .numake/out lib

      - run: rm -rf .numake

      - name: Move source code to src
        run: |
          mkdir src
          mv hooking src/hooking
          mv injector src/injector
          mv modutils src/modutils
          mv plugin_II src/plugin_II
          mv plugin_III src/plugin_III
          mv plugin_IV src/plugin_IV
          mv plugin_iii_unreal src/plugin_iii_unreal
          mv plugin_sa src/plugin_sa
          mv plugin_sa_unreal src/plugin_sa_unreal
          mv plugin_vc src/plugin_vc
          mv plugin_vc_unreal src/plugin_vc_unreal
          mv safetyhook src/safetyhook
          mv shared src/shared
          mv stb src/stb
            
      - name: Cleanup
        run: |
          rm -rf .git*
          rm -rf project.lua

      - uses: actions/upload-artifact@v4
        with:
          path: .
          name: mingw
          compression-level: 9

  create-release:
    runs-on: self-hosted
    permissions:
      contents: write
    needs:
      - generate-release-name
      - build-mingw
      - build-msvc

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: mingw
          path: mingw

      - name: Archive MinGW build
        working-directory: ${{github.workspace}}/mingw
        run: zip -9 -Zb -r ${{github.workspace}}/mingw.zip .

      - uses: actions/download-artifact@v4
        with:
          name: msvc
          path: msvc

      - name: Archive MSVC build
        working-directory: ${{github.workspace}}/msvc
        run: zip -9 -Zb -r ${{github.workspace}}/msvc.zip .

      - name: Create release
        run: gh release create ${{needs.generate-release-name.outputs.name}} --generate-notes

      - name: Upload MSVC build to release
        run: gh release upload ${{needs.generate-release-name.outputs.name}} ${{github.workspace}}/msvc.zip

      - name: Upload MinGW build to release
        run: gh release upload ${{needs.generate-release-name.outputs.name}} ${{github.workspace}}/mingw.zip
